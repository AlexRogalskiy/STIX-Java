package com.stephenott.stix.objects.core.sdo.objects

import com.stephenott.stix.objects.core.sdo.StixDomainObject
import com.stephenott.stix.objects.core.sro.objects.AllowedRelationship
import com.stephenott.stix.objects.core.sro.objects.RelationshipSro
import com.stephenott.stix.type.*
import com.stephenott.stix.type.vocab.*

interface MalwareSdo : StixDomainObject {
    val name: String?
    val description: String?
    val malwareTypes: MalwareTypes
    val isFamily: StixBoolean
    val aliases: StixStringList?
    val killChainPhases: KillChainPhases?
    val firstSeen: StixInstant?
    val lastSeen: StixInstant?
    val osExecutionEnvs: OsExecutionEnvs?
    val architectureExecutionEnvs: ProcessorArchitectures?
    val implementationLanguage: ImplementationLanguages?
    val capabilities: MalwareCapabilities?
    val sampleRefs: StixIdentifiers?

    companion object{
        val stixType = StixType("malware")

        val allowedRelationships: List<AllowedRelationship> = listOf(
            //@TODO convert allowedrelationship to a Kotlin DSL
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("authored-by"),
                ThreatActorSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("authored-by"),
                IntrusionSetSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("beacons-to"),
                InfrastructureSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("exfiltrates-to"),
                InfrastructureSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("communicates-with"),
                ThreatActorSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("communicates-with"),
                ThreatActorSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("communicates-with"),
                ThreatActorSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("communicates-with"),
                ThreatActorSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("controls"),
                MalwareSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("downloads"),
                MalwareSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("downloads"),
                ToolSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("downloads"),
                ThreatActorSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("drops"),
                MalwareSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("drops"),
                ToolSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("drops"),
                ThreatActorSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("exploits"),
                VulnerabilitySdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("originates-from"),
                LocationSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("targets"),
                IdentitySdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("targets"),
                InfrastructureSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("targets"),
                LocationSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("targets"),
                VulnerabilitySdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("uses"),
                AttackPatternSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("uses"),
                InfrastructureSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("uses"),
                MalwareSdo::class
            ),
            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("uses"),
                ToolSdo::class
            ),

            AllowedRelationship(
                MalwareSdo::class,
                RelationshipType("variant-of"),
                MalwareSdo::class
            )
        )
    }

}

data class Malware
    (
    override val name: String,
    override val description: String? = null,
    override val malwareTypes: MalwareTypes,
    override val isFamily: StixBoolean,
    override val aliases: StixStringList? = null,
    override val killChainPhases: KillChainPhases? = null,
    override val firstSeen: StixInstant? = null,
    override val lastSeen: StixInstant? = null,
    override val osExecutionEnvs: OsExecutionEnvs? = null,
    override val architectureExecutionEnvs: ProcessorArchitectures? = null,
    override val implementationLanguage: ImplementationLanguages? = null,
    override val capabilities: MalwareCapabilities? = null,
    override val sampleRefs: StixIdentifiers? = null,
    override val type: StixType = MalwareSdo.stixType,
    override val id: StixIdentifier = StixIdentifier(type),
    override val createdByRef: String? = null,
    override val created: StixInstant = StixInstant(),
    override val externalReferences: ExternalReferences? = null,
    override val objectMarkingsRefs: String? = null,
    override val granularMarkings: String? = null,
    override val specVersion: StixSpecVersion = StixSpecVersion(),
    override val labels: StixLabels? = null,
    override val modified: StixInstant = StixInstant(created),
    override val revoked: StixBoolean = StixBoolean(),
    override val confidence: StixConfidence? = null,
    override val lang: StixLang? = null
) :
    MalwareSdo {
    override fun allowedRelationships(): List<AllowedRelationship> {
        return MalwareSdo.allowedRelationships + RelationshipSro.allowedCommonRelationships
    }

}